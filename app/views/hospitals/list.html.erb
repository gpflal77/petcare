  <!-- Custom styles for this template-->
  <link href="/css/petcare.css" rel="stylesheet">
    <h1 class="h4 mb-1 text-gray-800"></h1>
     <p class="mb-4" id="test"></p>

     <!-- Content Row -->
     <div class="row">
            <!-- Grow In Utility -->
            <div class="col-lg-12">
              <div class="card position-relative">
                <div class="card-body">
                    <h6 class="col-12 m-12 font-weight-bold text-primary">진료항목</h6> 
                    <div id="medc_code_group"  class="btn-group btn-group-toggle col-lg-12" data-toggle="buttons">
                          <label class="btn btn-primary active">
                               <input type="radio" name="medc_code" id="medc_code_all" autocomplete="on" value="all" selected>전체
                          </label>
                        <% @medc_code.each do |medic| %>
                           <label class="btn btn-primary">
                               <input type="radio" name="medc_code" id="medc_code_<%=medic.code%>" autocomplete="on" value="<%=medic.code%>"> <%=medic.code_name%>
                           </label>
                        <% end %>
                    </div>
                 </div>
                 <div class="card-body">
                    <h6 class="col-12 m-12 font-weight-bold text-primary">세부항목</h6> 
                    <div id="medc_detail_group" class="btn-group btn-group-toggle col-lg-12" data-toggle="buttons">
                       <label class="btn btn-info active">
                               <input type="radio" name="medc_detail" id="medc_detail_all" autocomplete="on" value="all">전체
                       </label>
                    </div>
                 </div>
                <div class="card-body">
                  <h6 class="col-12 m-12 font-weight-bold text-primary">특이사항</h6> 
                    <div id="medc_detail_group" class="btn-group btn-group-toggle col-lg-12" data-toggle="buttons">
                           <label class="btn btn-success">
                               <input type="checkbox" name="parking_yn" id="parking_yn">주차가능
                           </label>
                           <label class="btn btn-success">
                               <input type="checkbox" name="allday_yn" id="allday_yn">24시
                           </label>
                           <label class="btn btn-success">
                               <input type="checkbox" name="emergency_yn" id="emergency_yn">응급실
                           </label>
                           <label class="btn btn-success">
                               <input type="checkbox" name="hair_yn" id="hair_yn">미용실
                           </label>
                           <label class="btn btn-success">
                               <input type="checkbox" name="weekend_yn" id="weekend_yn">주말진료
                           </label>
                    </div>
                </div> 
                <div class="card-body">
                    <h6 class="col-12 m-12 font-weight-bold text-primary">키워드검색</h6> 
                     <form class="form-inline mr-auto w-100 navbar-search">
                      <div class="input-group col-12 m-12">
                        <input type="text" class="form-control bg-light border-1 small" name="search_txt" id="search_txt" placeholder= "병원명 검색" aria-label="Search" aria-describedby="basic-addon2">
                        <div class="input-group-append">
                          <button class="btn btn-primary" type="button" id="search_btn">
                            <i class="fas fa-search fa-sm"></i>
                          </button>
                        </div>
                      </div>
                    </form>
                 </div>
              </div>
            </div>
             <div class="col-lg-12" id ="search_div">
              <div class="card position-relative">
                <div class="card-body">
                    <h6 class="col-12 m-12 font-weight-bold text-primary">지도</h6> 
                    <div id="map_div"  class="col-lg-12" > 
                          <div id="map" style="width:100%;height:500px;"></div>
                    </div>
                 </div>
                 <div class="card-body">
                    <div id="list_div">
                        <div class="card-body">
                             <table class="table table-bordered" id="hospital_list" width="100%" cellspacing="0">
                              <thead>
                                <tr>
                                  <th>병원이름</th>
                                  <th>진료시간</th>
                                  <th>전화번호</th>
                                  <th>주소</th>
                                  <th>평점</th>
                                </tr>
                              </thead>
                              <tbody> </tbody>
                              </table>
                       </div>
                    </div>
                 </div>
              </div>
            </div>
            <div class="col-lg-12" id ="review_div">
              <div class="card position-relative">
                 <div class="card-body">
                    <h6 class="col-12 m-12 font-weight-bold text-primary">후기</h6> 
                    <div id="list_div"  class="col-lg-12" >
                             <table class="table table-bordered" id="review_list" width="100%" cellspacing="0">
                              <thead>
                                <tr>
                                  <th>제목</th>
                                  <th>내용</th></th>
                                  <th>만족도</th>
                                </tr>
                              </thead>
                              <tbody> </tbody>
                              </table>
                    </div>
                 </div>
              </div>
            </div>
	</div>
       <!-- <button onclick="showData()">현재 위치 확인</button>
        <div id="console" style="width:500px; border:5px; font-size:20px">
        </div> -->
          
          
<script type="text/javascript">
var lat;//위도
var lon;//경도
var tm_x;//현재위치 TM좌표
var tm_y;//현재위치 TM좌표
var markersarr = []; // 지도에 표시된 마커 객체를 가지고 있을 배열입니다
var locaarr = [];    // 변환된 좌표 배열
var overlay;
$(document).ready(function() {
 
     //검색결과 숨김
    //$('#list_div').hide(); 
    //$('#search_div').hide(); 
    
    
    //위치정보 가져오기
    if(navigator.geolocation == undefined){
        alert("위치 정보 기능을 지원하지 않습니다!")
        return;
    }else{
        showData(); 
    }
    
    
     // 병원항목 코드에 따른 세부진료항목 코드 조회 ajax    //select box 예시     
     $("#medc_code").change(function() {

        var select_id = $('#medc_code').val(); //코드구분
        $.ajax({
            type: "GET",     
            url: '/get_code',           // 공통코드 request url --> application_cotroller에 정의
            data: {                     // 보낼 파라미터
                code_gubn : select_id,  // 코드구분 
                redirect_path : "hospitals_list_path"
            },
            dataType: "json", 
            success: function(data) { //데이터 받아옴 
              
              $('#medc_detail').empty(); //초기화
            //  $("#medc_detail").find("option").remove().end().append("<option value=''>전체</option>");

              $.each(data, function(i){
                $("#medc_detail").append("<option value='"+data[i].code+"'>"+data[i].code_name+"</option>")
              });    

            },
            error: function(data) {}
        });

     });
     
     
     // 병원항목 코드에 따른 세부진료항목 코드 조회 ajax    //radio 예시     
    $('input[name="medc_code"]').change(function() {
     
      //전체 선택시 
      if($(this).val() == "all"){ 
         // 세부진료항목 초기화
          var radio_html  = "";
              radio_html  += "<label class='btn btn-info'>"
                          + "<input type='radio' name='medc_detail' id='medc_detail_all' autocomplete='on' value='all'>전체"
                          + "</label>";
           $("#medc_detail_group").html(radio_html);
      }else{
        
           var select_id = $(this).val();
       
            $.ajax({
                type: "GET",     
                url: '/get_code',           // 공통코드 request url --> application_cotroller에 정의
                data: {                     // 보낼 파라미터
                    code_gubn : select_id,  // 코드구분 
                    redirect_path : "hospitals_list_path"
                },
                dataType: "json", 
                success: function(data) { //데이터 받아옴 
                
                var radio_html  = "";
                    radio_html  += "<label class='btn btn-info'>"
                                + "<input type='radio' name='medc_detail' id='medc_detail_all' autocomplete='on' value='all'>전체"
                                + "</label>";
                  $.each(data, function(i){
                    radio_html  +="<label class='btn btn-info'>"
                                + "<input type='radio' name='medc_detail' id='medc_detail_"+data[i].code+"' autocomplete='on' value='"+data[i].code+"'>"+data[i].code_name
                                + "</label>";
                  });    
                  
                  $("#medc_detail_group").html(radio_html);
    
                },
                error: function(data) {}
            });
      }
      
    });
    
  //조회버튼
  $("#search_btn").click(function(){
       
       //체크박스 값 셋팅
          $("#hair_yn").val("");
          $("#allday_yn").val("");
          $("#parking_yn").val("");
          $("#emergency_yn").val("");
          $("#weekend_yn").val("");
      
          if($("#hair_yn").is(":checked")) $("#hair_yn").val("Y");
          if($("#allday_yn").is(":checked")) $("#allday_yn").val("Y");
          if($("#parking_yn").is(":checked")) $("#parking_yn").val("Y");
          if($("#emergency_yn").is(":checked")) $("#emergency_yn").val("Y");
          if($("#weekend_yn").is(":checked")) $("#weekend_yn").val("Y");
              
  
          var gubn = $("input[name='search_options']").val();
           fn_getLocationSearch(tm_x, tm_y); //DB에서 가까운 거리 병원 찾아오기 
                        //후기 찾아보기 
           fn_getReviewSearch(tm_x, tm_y); //병원 후기 가져오기

    }); 


     
});
 //현재 위치 정보 알아보는 메소드
 function showData(){

    navigator.geolocation.getCurrentPosition(success, fail); //현재 위치 정보를 조사하고 성공 실패 했을시 호출되는 함수 설정
    
 }
 
 function success(position) { //성공시

    console.log("위치정보 확인 성공!");
    //for(var property in position.coords) { //반복문 돌면서 출력
      //  log("Key 값:"+property+" 정보:"+position.coords[property]);
    //}
    
    lat=position.coords["latitude"];
    lon=position.coords["longitude"];
    var url = "https://map.kakao.com/link/map/"+lat+","+lon;
    //var url="http://maps.googleapis.com/maps/api/geocode/json?latlng="+lat+","+lon+"&sensor=false";
    //location.href = url;//페이지 이동하기

    
    var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
    mapOption = { 
        center: new kakao.maps.LatLng(lat, lon), // 지도의 중심좌표
        level: 3 // 지도의 확대 레벨
    };
    
    // 지도를 생성
    map = new kakao.maps.Map(mapContainer, mapOption);

    // 마커가 표시될 위치입니다 
    //var markerPosition  = new kakao.maps.LatLng(lat, lon); 
    
    var imageSrc = '/images/dog.png', // 마커이미지의 주소입니다    
        imageSize = new kakao.maps.Size(40, 40), // 마커이미지의 크기입니다
        imageOption = {offset: new kakao.maps.Point(20, 40)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.

    // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다
    var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),
        markerPosition  = new kakao.maps.LatLng(lat, lon); 
    
    // 마커를 생성합니다
    marker = new kakao.maps.Marker({
            position: markerPosition,
            title: "현위치",
            image: markerImage // 마커이미지 설정 
    });
    
    
    // 마커 하나를 지도위에 표시합니다 
    //addMarker(new kakao.maps.LatLng(lat, lon)); //함수분리


    // 마커가 지도 위에 표시되도록 설정합니다
    marker.setMap(map);
    
    
    // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다
    var mapTypeControl = new kakao.maps.MapTypeControl();
    
    // 지도 타입 컨트롤을 지도에 표시합니다
    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);
    
    
  //현재위치 좌표변환 WGS84 -> TM좌표로 변환 (DB정보가 TM좌표임)
       var url = 'https://dapi.kakao.com/v2/local/geo/transcoord.json?x='+lon+'&y='+lat+'&input_coord=WGS84&output_coord=TM';
        
        $.ajax({
            type: "GET",     
            url: url,
            Host: 'dapi.kakao.com',
            headers: {
               Authorization: 'KakaoAK 2988bcc8484d610ceaf98200b212e651'
            },
            dataType: "json", 
            success: function(data) { //데이터 받아옴 
                    console.log(data.meta.total_count);
                    console.log(data.documents[0]);
                    tm_x = data.documents[0].x;
                    tm_y = data.documents[0].y;
                     $("#search_btn").trigger("click"); 
                     
            },
            error: function(data) {
            }
        });
    
    //getInfo();
    
   // $("#search_btn").trigger("click"); 
    
 }

  // 커스텀 오버레이를 닫기 위해 호출되는 함수입니다 
 function closeOverlay() {
        overlay.setMap(null);     
 }

 // 마커를 생성하고 지도위에 표시하는 함수입니다
 function addMarker(position, title, addr, tel_no, id) {
     
    // closeOverlay();
   // alert(title +  addr + tel_no + id);
    var imageSrc = '/images/loca2.png', // 마커이미지의 주소입니다    
        imageSize = new kakao.maps.Size(40, 40), // 마커이미지의 크기입니다
        imageOption = {offset: new kakao.maps.Point(20, 40)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.

    // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다
    var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),
        markerPosition  = new kakao.maps.LatLng(lat, lon); 
    
    // 마커를 생성합니다
    var marker = new kakao.maps.Marker({
        position: position,
        title: title,
        image: markerImage // 마커이미지 설정 
    });

    // 마커가 지도 위에 표시되도록 설정합니다
    marker.setMap(map);
    
    // 생성된 마커를 배열에 추가합니다
    markersarr.push(marker);
    locaarr.push(position);
   
    // 커스텀 오버레이에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다
    var content = '<div class="customoverlay">' +
                '  <a href="/hospitals/view/'+id+'" target="_blank">' +
                '    <span class="title"><img src="/images/info.png" style="width:15px"/>'+'  '+title+'</span>' +
                '    <span class="tel">'+tel_no+'</span>' +
                '  </a>' +
                '</div>';
                        
             // 커스텀 오버레이가 표시될 위치입니다 
             // var position = new kakao.maps.LatLng(lat, lon);  
                            
                        // 커스텀 오버레이를 생성합니다
               overlay = new kakao.maps.CustomOverlay({
                                map: map,
                                position: position,
                                content: content,
                                yAnchor: 1 
                            });

 }
 
 function setBounds() {
    // LatLngBounds 객체에 추가된 좌표들을 기준으로 지도의 범위를 재설정합니다
    // 이때 지도의 중심좌표와 레벨이 변경될 수 있습니다
    map.setBounds(bounds);
 }

 // 배열에 추가된 마커들을 지도에 표시하거나 삭제하는 함수입니다
 function setMarkers(map) {
    for (var i = 0; i < markersarr.length; i++) {
        markersarr[i].setMap(map);
    }            
 }

 // "마커 보이기" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에 표시하는 함수입니다
 function showMarkers() {
    setMarkers(map)    
 }

 // "마커 감추기" 버튼을 클릭하면 호출되어 배열에 추가된 마커를 지도에서 삭제하는 함수입니다
 function hideMarkers() {
    setMarkers(null);    
 }
 
 //실패시
 function fail(err){
    switch (err.code){
        case err.PERMISSION_DENIED:
            msg = "사용자 거부";
        break;
 
        case err.PERMISSION_UNAVAILABLE:
            msg = "지리정보를 얻을 수 없음";
        break;
 
        case err.TIMEOUT:
            msg = "시간초과";
        break;
 
        case err.UNKNOWN_ERROR:
            msg = "알 수 없는 오류 발생";
        break;
    }
        log(msg);
 }
  
 function log(msg){
    var console = document.getElementById("console");
    console.innerHTML += msg+"<br/>";
 }


//현위치주변 병원 가져오기
function fn_getLocationSearch(x, y) {
    
         //체크박스 값 셋팅
          $("#hair_yn").val("");
          $("#allday_yn").val("");
          $("#parking_yn").val("");
          $("#emergency_yn").val("");
          $("#weekend_yn").val("");
      
          if($("#hair_yn").is(":checked")) $("#hair_yn").val("Y");
          if($("#allday_yn").is(":checked")) $("#allday_yn").val("Y");
          if($("#parking_yn").is(":checked")) $("#parking_yn").val("Y");
          if($("#emergency_yn").is(":checked")) $("#emergency_yn").val("Y");
          if($("#weekend_yn").is(":checked")) $("#weekend_yn").val("Y");
          
            removeMarker();
           //alert(markersarr.length + ' ' + locaarr.length);
           // markersarr = null; // 지도에 표시된 마커 객체를 가지고 있을 배열입니다
            // locaarr = null;    // 변환된 좌표 배열 
             setMarkers(null);
             //overlay.clear();
             
            // $('#hospital_list').find('tbody').remove();
            var  url  = "";
          //if(gubn == "1"){
            url = 'get_nearby_hospital';
          // }else{
          //   url = 'get_nearby_hospital_satis';  
          // }
            $.ajax({
                type: "GET",     
                url: url,      
                data: {                     // 보낼 파라미터
                    tm_x: x,  // x좌표(TM중부원점) 
                    tm_y: y,  // x좌표(TM중부원점) 
                    search_txt    : $("#search_txt").val(),
                    redirect_path : "hospitals_list_path",
                    hair_yn       : $("#hair_yn").val(),
                    weekend_yn    : $("#weekend_yn").val(),
                    allday_yn     : $("#allday_yn").val(),
                    parking_yn    : $("#parking_yn").val(),
                    emergency_yn  : $("#emergency_yn").val(),
                    medc_code     : $('input[name="medc_code"]').val(),
                    medc_detail   : $('input[name="medc_detail"]').val(),
                },
                dataType: "json", 
                async: false, //동기처리함
                success: function(data) { //데이터 받아옴 

                    $('#hospital_list').find('tbody').empty();
                     removeMarker();
                     
                    $.each(data, function(i){
                        var myRow = "<tr><td><a href='/hospitals/view/"+data[i].id+"'>" + data[i].name + "</a></td><td>" + data[i].tel_no + "</td><td>" + data[i].open_time + "~"+  data[i].close_time
                                  +"</td><td>" + data[i].addr +"</td><td>" + data[i].satis +"</td></tr>";
                       
                        $('#hospital_list').find('tbody').append(myRow);
                        
                        
                        // 좌표변환 후 지도에 그려주기 
                        fn_setHospitalLoction(data[i].loca_x, data[i].loca_y, data[i].name, data[i].addr, data[i].tel_no, data[i].id);
                        
                    });
                    
                    if(data.length > 0){
                       $('#search_div').show(); 
                    }
                
                    //좌표범위 재설정 및 커스텀 오버레이 설정
                    fn_reload_map_view();
    
                },
                error: function(data) {}
            });
    
}


//지도에 그려주기(TM -> WGS84 좌표 재변환 후 그려줌)
function fn_setHospitalLoction(x, y, title, addr, tel_no, id) {

 var url = 'https://dapi.kakao.com/v2/local/geo/transcoord.json?x='+x+'&y='+y+'&input_coord=TM&output_coord=WGS84';

            $.ajax({
                type: "GET",     
                url: url,
                Host: 'dapi.kakao.com',
                headers: {
                   Authorization: 'KakaoAK 2988bcc8484d610ceaf98200b212e651'
                },
                async: false, //동기처리함
                dataType: "json", 
                success: function(data) { //데이터 받아옴 
                        console.log(">>>>>>>>>>>>>"+data.meta.total_count);
                        console.log(data.documents[0]);
                        var x = data.documents[0].x;
                        var y = data.documents[0].y;

                        addMarker(new kakao.maps.LatLng(y, x), title, addr, tel_no, id); //지도에 표시 및 position 저장
                       // locaarr.push({lat: y, lon: x});
                               
                },
                error: function(data) {
                }
            });
}

function fn_reload_map_view(){
        var i, marker2;
        var bounds = new kakao.maps.LatLngBounds();    
    
         $.each(locaarr, function(i){
              bounds.extend(locaarr[i]);      
          }); //each end
                        
             //지도범위 재설정
         map.setBounds(bounds);
                        
                            
                        
         // 마커를 클릭했을 때 커스텀 오버레이를 표시합니다
         kakao.maps.event.addListener(marker, 'click', function() {
                 overlay.setMap(map);
         });
}

function fn_getReviewSearch(x, y){
//alert($('input[name="medc_code"]').val());
    $.ajax({
                type: "GET",     
                url: 'get_nearby_hospital_reviews',      
                data: {                     // 보낼 파라미터
                    tm_x: x,  // x좌표(TM중부원점) 
                    tm_y: y,  // x좌표(TM중부원점) 
                    search_txt: "",  
                    redirect_path : "hospitals_list_path",
                    hair_yn       : $("#hair_yn").val(),
                    weekend_yn    : $("#weekend_yn").val(),
                    allday_yn     : $("#allday_yn").val(),
                    parking_yn    : $("#parking_yn").val(),
                    emergency_yn  : $("#emergency_yn").val(),
                    medc_code     : $('input[name="medc_code"]:checked').val(),
                    medc_detail   : $('input[name="medc_detail:checked"]').val()
                },
                dataType: "json", 
                success: function(data) { //데이터 받아옴 
                    $('#review_list').find('tbody').empty();
                    
                    $.each(data, function(i){
                        var myRow = "<tr><td><a href='/reviews/"+data[i].id+"'>" + data[i].title + "</a></td><td>" +data[i].hospital_review
                                  //+"</td><td>" + data[i].satis1 + data[i].satis2 + data[i].satis3 + data[i].satis4 

                
                        $('#review_list').find('tbody').append(myRow);
                        
                        
                    });
                    
                    if(data.length > 0){
                       $('#search_div').show(); 
                    }
                
    
                },
                error: function(data) {}
            });
    
}

// 지도 위에 표시되고 있는 마커를 모두 제거합니다
function removeMarker() {
    for ( var i = 0; i < markersarr.length; i++ ) {
        markersarr[i].setMap(null);
    }   
    markersarr = [];
}

</script>   